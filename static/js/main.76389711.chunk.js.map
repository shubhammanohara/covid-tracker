{"version":3,"sources":["India/InfoCards.js","India/IndiaTable/TableHeader.js","India/IndiaTable/IndiaTable.js","India/Graph.js","India/India.js","table/table.js","InfoCards.js","Graph/Graph.js","World.js","App.js","reportWebVitals.js","index.js"],"names":["InfoCards","props","data","Card","className","CardContent","Typography","color","totalCases","activeCases","totalDeaths","TableHeader","TableHead","TableRow","TableCell","TableSortLabel","active","orderBy","direction","order","onClick","handleRequestToSort","align","useStyles","makeStyles","table","minWidth","IndiaTable","descendingComparator","a","b","useState","filter","setFilter","React","page","setPage","rowsPerPage","setRowsPerPage","classes","rows","tableData","row","name","toLowerCase","includes","emptyRows","Math","min","length","setOrder","setOrderBy","handleTableClick","event","console","log","target","value","TextField","id","label","variant","onChange","e","InputProps","endAdornment","InputAdornment","IconButton","TableContainer","component","Paper","Table","aria-label","columnName","isDesc","TableBody","array","comparator","stabilizedThis","map","el","index","sort","stableSort","getComparator","slice","scope","style","height","colSpan","TableFooter","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","parseInt","Graph","setData","createGraphData","dataArray","prevValueCases","prevValueDeaths","forEach","newData","date","cases","newCases","deaths","newDeaths","push","useEffect","fetch","then","response","json","rawData","moment","Date","format","Confirmed","Deaths","graphData","getGraphdata","sampleData","labels","datasets","borderColor","radius","options","scales","xAxes","gridLines","drawOnChartArea","yAxes","India","stateData","setStateData","totalData","setTotalData","currentData","states","regionData","region","totalInfected","deceased","getData","Container","Box","title","CountryTable","width","columns","field","headerName","flex","pageSize","onRowSelected","item","country","worldData","setWorldData","world","getWorldData","World","countryData","setCountryData","selectedCountry","setSelectedCountry","countries","countryFlag","countryInfo","flag","getCountriesData","countryName","App","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.76389711.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Card, CardContent, Typography } from \"@material-ui/core\"\r\n\r\nconst InfoCards = (props) => {\r\n    const data = props.data\r\n\r\n    return (\r\n        <>\r\n            <Card className=\"infoBoxTotal\">\r\n                <CardContent>\r\n                    <Typography color=\"textSecondary\">Total Cases</Typography>\r\n                    <h2>{data.totalCases}</h2>\r\n                </CardContent>\r\n            </Card>\r\n            <Card className=\"infoBoxActive\">\r\n                <CardContent>\r\n                    <Typography color=\"textSecondary\">Active Cases</Typography>\r\n                    <h2>{data.activeCases}</h2>\r\n                </CardContent>\r\n            </Card>\r\n            <Card className=\"infoBoxDeaths\">\r\n                <CardContent>\r\n                    <Typography color=\"textSecondary\">Total Deaths</Typography>\r\n                    <h2>{data.totalDeaths}</h2>\r\n                </CardContent>\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default InfoCards","import React from \"react\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\r\n\r\nconst TableHeader = (props) => {\r\n    return (\r\n        <TableHead>\r\n            <TableRow>\r\n                <TableCell key=\"name\">\r\n                    <TableSortLabel\r\n                        active={props.orderBy === \"name\"}\r\n                        direction={\r\n                            props.orderBy === \"name\" ? props.order : \"desc\"\r\n                        }\r\n                        onClick={() => {\r\n                            props.handleRequestToSort(\"name\");\r\n                        }}\r\n                    >\r\n                        Country\r\n          </TableSortLabel>\r\n                </TableCell>\r\n                <TableCell key=\"totalCases\" align=\"right\">\r\n                    <TableSortLabel\r\n                        active={props.orderBy === \"totalCases\"}\r\n                        direction={\r\n                            props.orderBy === \"totalCases\" ? props.order : \"desc\"\r\n                        }\r\n                        onClick={() => {\r\n                            props.handleRequestToSort(\"totalCases\");\r\n                        }}\r\n                    >\r\n                        Total Cases\r\n          </TableSortLabel>\r\n                </TableCell>\r\n                <TableCell align=\"right\" key=\"activeCases\">\r\n                    <TableSortLabel\r\n                        active={props.orderBy === \"activeCases\"}\r\n                        direction={\r\n                            props.orderBy === \"activeCases\" ? props.order : \"desc\"\r\n                        }\r\n                        onClick={() => {\r\n                            props.handleRequestToSort(\"activeCases\");\r\n                        }}\r\n                    >Active Cases</TableSortLabel>\r\n                </TableCell>\r\n                <TableCell align=\"right\" key=\"totalDeaths\">\r\n                    <TableSortLabel\r\n                        active={props.orderBy === \"totalDeaths\"}\r\n                        direction={\r\n                            props.orderBy === \"totalDeaths\" ? props.order : \"desc\"\r\n                        }\r\n                        onClick={() => {\r\n                            props.handleRequestToSort(\"totalDeaths\");\r\n                        }}>Total Deaths</TableSortLabel>\r\n                </TableCell>\r\n            </TableRow>\r\n        </TableHead>\r\n    );\r\n};\r\n\r\nexport default TableHeader;\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHeader from \"./TableHeader\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        minWidth: 600,\r\n    },\r\n});\r\n\r\nconst IndiaTable = (props) => {\r\n\r\n    function descendingComparator(a, b, orderBy) {\r\n        if (b[orderBy] < a[orderBy]) {\r\n            return -1;\r\n        }\r\n        if (b[orderBy] > a[orderBy]) {\r\n            return 1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    function getComparator(order, orderBy) {\r\n        return order === 'desc'\r\n            ? (a, b) => descendingComparator(a, b, orderBy)\r\n            : (a, b) => -descendingComparator(a, b, orderBy);\r\n    }\r\n\r\n    function stableSort(array, comparator) {\r\n        const stabilizedThis = array.map((el, index) => [el, index]);\r\n        stabilizedThis.sort((a, b) => {\r\n            const order = comparator(a[0], b[0]);\r\n            if (order !== 0) return order;\r\n            return a[1] - b[1];\r\n        });\r\n        return stabilizedThis.map((el) => el[0]);\r\n    }\r\n\r\n    const [filter, setFilter] = useState(\"\");\r\n\r\n    const handleChange = (e) => setFilter(e.target.value);\r\n\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n\r\n    const classes = useStyles();\r\n\r\n    const search = (data) => {\r\n        if (filter === \"\") return data\r\n        else\r\n            return data.filter(row => row.name.toLowerCase().includes(filter.toLowerCase()));\r\n    }\r\n\r\n    const rows = search(props.tableData)\r\n    // const rows = [data.map((row)=>)]\r\n\r\n\r\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage)\r\n\r\n    const [order, setOrder] = useState(\"desc\");\r\n    const [orderBy, setOrderBy] = useState(\"totalCases\");\r\n\r\n    const handleRequestToSort = (columnName) => {\r\n        const isDesc = (orderBy === columnName && order === \"desc\");\r\n        setOrderBy(columnName);\r\n        setOrder(isDesc ? \"asc\" : \"desc\");\r\n    };\r\n\r\n    const handleTableClick = (event) => {\r\n\r\n        console.log(event.target.value)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <TextField\r\n                id=\"filled-basic\"\r\n                label=\"Search Country\"\r\n                variant=\"filled\"\r\n                onChange={handleChange}\r\n                InputProps={{\r\n                    endAdornment: (\r\n                        <InputAdornment>\r\n                            <IconButton>\r\n                                <SearchIcon />\r\n                            </IconButton>\r\n                        </InputAdornment>\r\n                    ),\r\n                }}\r\n            />\r\n            <TableContainer component={Paper}>\r\n                <Table className={classes.table} aria-label=\"customized table\">\r\n                    <TableHeader\r\n                        orderBy={orderBy}\r\n                        order={order}\r\n                        handleRequestToSort={handleRequestToSort}\r\n                    />\r\n                    <TableBody>\r\n                        {stableSort(rows, getComparator(order, orderBy))\r\n                            .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                            .map(\r\n                                (row, index) => (\r\n                                    <TableRow key={row.name} onClick={handleTableClick}>\r\n                                        <TableCell component=\"th\" scope=\"row\">\r\n                                            {row.name}\r\n                                        </TableCell>\r\n                                        <TableCell align=\"right\">{row.totalCases} </TableCell>\r\n                                        <TableCell align=\"right\">{row.activeCases}</TableCell>\r\n                                        <TableCell align=\"right\">{row.totalDeaths}</TableCell>\r\n                                    </TableRow>\r\n                                )\r\n                            )}\r\n                        {emptyRows > 0 && (\r\n                            <TableRow style={{ height: 53 * emptyRows }}>\r\n                                <TableCell colSpan={6} />\r\n                            </TableRow>\r\n                        )}\r\n                    </TableBody>\r\n\r\n                    <TableFooter>\r\n                        <TableRow>\r\n                            <TablePagination\r\n                                rowsPerPageOptions={[5, 10, 25]}\r\n                                count={rows.length}\r\n                                rowsPerPage={rowsPerPage}\r\n                                page={page}\r\n                                onChangePage={handleChangePage}\r\n                                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                            />\r\n                        </TableRow>\r\n                    </TableFooter>\r\n                </Table>\r\n            </TableContainer>\r\n        </>\r\n    );\r\n};\r\n\r\n\r\n\r\nexport default IndiaTable\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Line } from \"react-chartjs-2\"\r\nimport moment from \"moment\"\r\n\r\n\r\n\r\nconst Graph = (props) => {\r\n    const [data, setData] = useState([]);\r\n\r\n    const createGraphData = (data) => {\r\n        const dataArray = [];\r\n        let prevValueCases = 0;\r\n        let prevValueDeaths = 0;\r\n        data.forEach((data) => {\r\n            let newData = {\r\n                date: data.date,\r\n                cases: data.cases,\r\n                newCases: data.cases - prevValueCases,\r\n                deaths: data.deaths,\r\n                newDeaths: data.deaths - prevValueDeaths\r\n            };\r\n            dataArray.push(newData)\r\n            prevValueCases = data.cases;\r\n            prevValueDeaths = data.deaths;\r\n        }\r\n\r\n        )\r\n        return dataArray\r\n    }\r\n\r\n    useEffect(() => {\r\n        const getGraphdata = async () => {\r\n            await fetch(`https://api.covid19api.com/total/dayone/country/india`)\r\n                .then(response => response.json())\r\n                .then((data) => {\r\n\r\n                    const rawData = data.map(data => (\r\n                        {\r\n                            date: moment(data.Date).format(\"DD-MM-YYYY\"),\r\n                            cases: data.Confirmed,\r\n                            deaths: data.Deaths\r\n                        }\r\n                    )\r\n\r\n                    )\r\n\r\n                    const graphData = createGraphData(rawData)\r\n\r\n                    setData(graphData)\r\n                })\r\n        }\r\n        getGraphdata();\r\n    }, [])\r\n\r\n    const sampleData = {\r\n        labels: data.map(date => date.date),\r\n        datasets: [\r\n            {\r\n                label: \"total cases\",\r\n                data: data.map(date => date.newCases),\r\n                borderColor: \"rgba(255, 205, 0, 1)\",\r\n                radius: 0\r\n            },\r\n            {\r\n                label: \"total Deaths\",\r\n                data: data.map(date => date.newDeaths),\r\n                borderColor: \"red\",\r\n                radius: 0\r\n            }\r\n        ]\r\n    }\r\n\r\n    var options = {\r\n        scales: {\r\n            xAxes: [{\r\n                gridLines: {\r\n                    drawOnChartArea: false\r\n                }\r\n            }],\r\n            yAxes: [{\r\n                gridLines: {\r\n                    drawOnChartArea: false\r\n                }\r\n            }]\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"chart\">\r\n            <Line\r\n                options={options}\r\n                data={sampleData}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Graph\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Box, Container } from \"@material-ui/core\"\r\nimport InfoCards from './InfoCards'\r\nimport IndiaTable from './IndiaTable/IndiaTable'\r\nimport Graph from \"./Graph\"\r\n\r\nconst India = () => {\r\n\r\n    const [stateData, setStateData] = useState([]);\r\n    const [totalData, setTotalData] = useState({});\r\n\r\n    useEffect(() => {\r\n        const getData = async () => {\r\n            await fetch(\"https://api.apify.com/v2/key-value-stores/toDWvRj1JpTXiM8FF/records/LATEST?disableRedirect=true\")\r\n                .then((response) => response.json())\r\n                .then((data) => {\r\n                    const currentData = {\r\n                        totalCases: data.totalCases,\r\n                        activeCases: data.activeCases,\r\n                        totalDeaths: data.deaths,\r\n                    }\r\n                    const states = data.regionData.map(data => ({\r\n                        name: data.region,\r\n                        totalCases: data.totalInfected,\r\n                        activeCases: data.activeCases,\r\n                        totalDeaths: data.deceased,\r\n                    }))\r\n\r\n                    setStateData(states);\r\n                    setTotalData(currentData);\r\n                })\r\n        }\r\n        getData()\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <Container className=\"app__right\">\r\n                <h1>Covid-19 Tracker</h1>\r\n                <Container>\r\n                    <h2>IndiaCovid-19 Data</h2>\r\n                    <Box className=\"infoCard\">\r\n                        <InfoCards title=\"Total Cases\" data={totalData} />\r\n                    </Box>\r\n                </Container>\r\n                <Container className=\"graph\">\r\n                    <Graph></Graph>\r\n                </Container>\r\n            </Container>\r\n\r\n            <Container className=\"app__left\">\r\n                <IndiaTable tableData={stateData}></IndiaTable>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default India\r\n","import React, { useState } from 'react';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 600,\r\n  },\r\n});\r\n\r\nfunction CountryTable(props) {\r\n\r\n  const [filter, setFilter] = useState(\"\");\r\n  const columns = [\r\n    { field: 'name', headerName: 'Country', flex: 1 },\r\n    { field: 'totalCases', headerName: 'Total Cases', flex: 1, align: \"right\" },\r\n    {\r\n      field: 'activeCases',\r\n      headerName: 'Active Cases', flex: 1, align: \"right\"\r\n    },\r\n    {\r\n      field: 'totalDeaths',\r\n      headerName: 'Total Cases', flex: 1, align: \"right\"\r\n    },\r\n  ];\r\n\r\n  const handleChange = (e) => setFilter(e.target.value);\r\n  const search = (data) => {\r\n    if (filter === \"\") return data\r\n    else\r\n      return data.filter(row => row.name.toLowerCase().includes(filter.toLowerCase()));\r\n  }\r\n\r\n  const rows = search(props.tableData)\r\n\r\n  // const rows = props.tableData\r\n\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <div style={{ height: 630, width: '100%' }}>\r\n\r\n        <TextField\r\n          id=\"filled-basic\"\r\n          label=\"Search Country\"\r\n          variant=\"filled\"\r\n          onChange={handleChange}\r\n          InputProps={{\r\n            endAdornment: (\r\n              <InputAdornment>\r\n                <IconButton>\r\n                  <SearchIcon />\r\n                </IconButton>\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n        />\r\n        <DataGrid className={classes.table} rows={rows} columns={columns} pageSize={10} onRowSelected={item => props.country(item.data.name)} />\r\n\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CountryTable\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Card, CardContent, Typography } from \"@material-ui/core\"\r\n\r\nconst InfoCards = () => {\r\n    const [worldData, setWorldData] = useState([])\r\n\r\n    useEffect(() => {\r\n        const getWorldData = async () => {\r\n            await fetch(`https://disease.sh/v3/covid-19/all`)\r\n                .then(response => response.json())\r\n                .then((data) => {\r\n                    const world = (\r\n                        {\r\n                            cases: data.cases,\r\n                            deaths: data.deaths,\r\n                            active: data.active\r\n                        }\r\n                    )\r\n\r\n\r\n                    setWorldData(world)\r\n                })\r\n        }\r\n        getWorldData();\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <Card className=\"infoBoxTotal\">\r\n                <CardContent>\r\n                    <Typography color=\"textSecondary\">Total Cases</Typography>\r\n                    <h2>{worldData.cases}</h2>\r\n                </CardContent>\r\n            </Card>\r\n            <Card className=\"infoBoxActive\">\r\n                <CardContent>\r\n                    <Typography color=\"textSecondary\">Active Cases</Typography>\r\n                    <h2>{worldData.active}</h2>\r\n                </CardContent>\r\n            </Card>\r\n            <Card className=\"infoBoxDeaths\">\r\n                <CardContent>\r\n                    <Typography color=\"textSecondary\">Total Deaths</Typography>\r\n                    <h2>{worldData.deaths}</h2>\r\n                </CardContent>\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default InfoCards\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Line } from \"react-chartjs-2\"\r\nimport moment from \"moment\"\r\n\r\n\r\n\r\nconst Graph = (props) => {\r\n    const country = props.country\r\n    const [data, setData] = useState([]);\r\n\r\n    const createGraphData = (data) => {\r\n        const dataArray = [];\r\n        let prevValueCases = 0;\r\n        let prevValueDeaths = 0;\r\n        data.forEach((data) => {\r\n            let newData = {\r\n                date: data.date,\r\n                cases: data.cases,\r\n                newCases: data.cases - prevValueCases,\r\n                deaths: data.deaths,\r\n                newDeaths: data.deaths - prevValueDeaths\r\n            };\r\n            dataArray.push(newData)\r\n            prevValueCases = data.cases;\r\n            prevValueDeaths = data.deaths;\r\n        }\r\n\r\n        )\r\n        return dataArray\r\n    }\r\n\r\n    useEffect(() => {\r\n        const getGraphdata = async () => {\r\n            await fetch(`https://api.covid19api.com/total/dayone/country/${country}`)\r\n                .then(response => response.json())\r\n                .then((data) => {\r\n\r\n                    const rawData = data.map(data => (\r\n                        {\r\n                            date: moment(data.Date).format(\"DD-MM-YYYY\"),\r\n                            cases: data.Confirmed,\r\n                            deaths: data.Deaths\r\n                        }\r\n                    )\r\n\r\n                    )\r\n\r\n                    const graphData = createGraphData(rawData)\r\n\r\n                    setData(graphData)\r\n                })\r\n        }\r\n        getGraphdata();\r\n    }, [country])\r\n\r\n    const sampleData = {\r\n        labels: data.map(date => date.date),\r\n        datasets: [\r\n            {\r\n                label: \"total cases\",\r\n                data: data.map(date => date.newCases),\r\n                borderColor: \"rgba(255, 205, 0, 1)\",\r\n                radius: 0\r\n            },\r\n            {\r\n                label: \"total Deaths\",\r\n                data: data.map(date => date.newDeaths),\r\n                borderColor: \"red\",\r\n                radius: 0\r\n            }\r\n        ]\r\n    }\r\n\r\n    var options = {\r\n        scales: {\r\n            xAxes: [{\r\n                gridLines: {\r\n                    drawOnChartArea: false\r\n                }\r\n            }],\r\n            yAxes: [{\r\n                gridLines: {\r\n                    drawOnChartArea: false\r\n                }\r\n            }]\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"chart\">\r\n            <Line\r\n                options={options}\r\n                data={sampleData}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Graph\r\n","import React, { useState, useEffect } from \"react\";\nimport { Box, Container, Paper } from \"@material-ui/core\"\nimport './App.css';\nimport Table from './table/table'\nimport InfoCards from './InfoCards'\nimport Graph from './Graph/Graph'\n\n\nfunction World() {\n\n  const [countryData, setCountryData] = useState([]);\n  const [selectedCountry, setSelectedCountry] = useState(\"USA\");\n\n  useEffect(() => {\n    const getCountriesData = async () => {\n      await fetch(\"https://disease.sh/v3/covid-19/countries\")\n        .then((response) => response.json())\n        .then((data) => {\n          const countries = data.map((data, index) => ({\n            id: index,\n            name: data.country,\n            totalCases: data.cases,\n            activeCases: data.active,\n            totalDeaths: data.deaths,\n            countryFlag: data.countryInfo.flag\n          }))\n\n          setCountryData(countries);\n        })\n    };\n\n\n    getCountriesData();\n  }, [])\n\n  const getCountry = (countryName) => {\n    setSelectedCountry(countryName)\n    console.log(countryName)\n  }\n\n\n  return (\n    <div className=\"App\">\n      <Container className=\"app__right\">\n        <h1>Covid-19 Tracker</h1>\n\n        <Container>\n          <h2>World-Wide Covid-19 Data</h2>\n          <Box className=\"infoCard\">\n            <InfoCards title=\"Total Cases\" data={selectedCountry} />\n          </Box>\n        </Container>\n\n\n        <Paper className=\"graph\" component={Box} >\n          <h2 align=\"center\">{selectedCountry}</h2>\n          <Graph country={selectedCountry} />\n        </Paper>\n\n      </Container>\n\n      <Container className=\"app__left\">\n        <Table tableData={countryData} country={getCountry}></Table>\n      </Container>\n    </div >\n\n  );\n}\n\nexport default World;\n","import React from 'react'\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\r\nimport India from './India/India'\r\nimport World from \"./World\"\r\n\r\nfunction App() {\r\n    return (\r\n        <Router>\r\n            <Route path=\"/\" component={World} exact />\r\n            <Route path=\"/india\" component={India} />\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}